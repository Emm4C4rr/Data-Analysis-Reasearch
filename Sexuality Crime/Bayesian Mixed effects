library(reticulate)
library(tidyverse)
library(datawizard)
library(dplyr)
library(brms)
library(bayesplot)
library(loo)

source_python('C:/Users/emmam/PycharmProjects/pythonProject2/Summer project/data wrangling samples/Sexuality_Crime_2022.py')

df <- py$df2
df <- as.data.frame(df)

# scaling variables
df2 <- df%>%
  mutate(att_7 = as.numeric(standardize(att_7)), Assault_Offenses = standardize(Assault_Offenses), Sex_Offenses = standardize(Sex_Offenses),
         Drug_Offenses = standardize(Drug_Offenses), Pornographic_Offenses = standardize(Pornographic_Offenses),
         Prostitution_Offenses = standardize(Prostitution_Offenses), age = standardize(age), religion = standardize(religionid),
         politics = standardize(politicalid_7))

df3 <- df2%>%
  mutate(sex = factor(birthSex), state = factor(State), education = factor(education), sexuality = factor(sexuality_5))

# fitting model
model <- brm(att_7 ~ Assault_Offenses + Sex_Offenses + Drug_Offenses +
  Pornographic_Offenses + Prostitution_Offenses + age +
  sex + religion + politics + education + sexuality +
  (1 | state),
             data = df3,
             warmup = 1000,
             iter = 5000,
             chains = 2)

# diagonstics
 # divergence
mcmc_parcoord(as.matrix(model), pars = vars(-lp__),
              np = nuts_params(model), np_style = scatter_style_np(div_color = 'red',
                                                                     div_size = 0.15,
                                                                     div_alpha = 0.4)) +
              theme(axis.text.x = element_text(angle = 45, hjust = 1))
 # trace plots
mcmc_trace(model, pars = vars(-lp__, -starts_with('b')),
           n_warmup = 500, facet_args = list(ncol = 4, labeller = label_parsed))

 # ACF plots
mcmc_acf(model, pars = vars(starts_with('r_state')),
         lags = 10, facet_args = list(labeller = label_parsed))

 # Posterior Predictive Checks
pp_data <- posterior_predict(model, ndraws = 100)
str(df3$att_7)
str(pp_data)
pdense2 <- ppc_dens_overlay(y = df3$att_7, yrep = pp_data)

ppc_stat(y = df3$att_7, yrep = posterior_predict(model, ndraws = 1000),
         stat = 'skew')

ppc_stat_grouped(y = df3$att_7, yrep = posterior_predict(model, ndraws = 500),
                 group = df3$state, stat = 'median')

model_loo <- loo(model, save_psis = TRUE, cores =2)
w <- weights(model_loo$psis_object)

ppc_loo_pit_overlay(df3$att_7, posterior_predict(model), lw = w)

 # influence and outliers
k <- model_loo$psis_object$diagnostics$pareto_k

dfk<- tibble(obs_idx = seq_along(k), khat = k)

ggplot(dfk, aes(x = obs_idx, y = khat)) + geom_point(alpha =0.5) +
  geom_hline(aes(yintercept=0)) + ylim(-1, 1)

# model comparison
#loo1 <- loo(model, save_psis = TRUE, cores = 2)
#loo2 <- ....
#loo_compare(loo1, loo2)




# then add race after model and re-run
